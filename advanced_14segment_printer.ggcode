// Advanced 14-Segment Display Text Printer
// Complete alphabet support with true 14-segment display patterns
// Each character uses proper segment combinations for maximum readability

note {=== 14-Segment Display Text Printer ===}
note {Full alphabet support with authentic segment patterns}

let safe_z = 2

// Main text printing function with 14-segment display
function print_text(x, y, text, size, spacing) {
    note {Printing '[text]' at X[x] Y[y], size [size], spacing [spacing]}
    
    let current_x = x
    let char_width = size
    let char_height = size * 1.5
    
    for char in text {
        note {Drawing 14-segment '[char]' at X[current_x]}
        
        // Calculate segment positions for current character
        let left = current_x - char_width/2
        let right = current_x + char_width/2
        let center_x = current_x
        let top = y + char_height/2
        let middle = y
        let bottom = y - char_height/2
        let quarter_top = y + char_height/4
        let quarter_bottom = y - char_height/4
        
        // 14-segment display patterns
        if char == "A" {
            // Segments: a1, a2, f, j, g1, g2, b, c
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_j(center_x, top, quarter_top)
            draw_segment_g1(left, center_x, middle)
            draw_segment_g2(center_x, right, middle)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
        }
        
        if char == "B" {
            // Segments: a1, a2, f, j, g2, b, c, d1, d2, i
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_j(center_x, top, quarter_top)
            draw_segment_g2(center_x, right, middle)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
            draw_segment_i(center_x, quarter_bottom, bottom)
        }
        
        if char == "C" {
            // Segments: a1, a2, f, e, d1, d2
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_e(left, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
        }
        
        if char == "D" {
            // Segments: a1, a2, f, j, b, c, d1, d2, i
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_j(center_x, top, quarter_top)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
            draw_segment_i(center_x, quarter_bottom, bottom)
        }
        
        if char == "E" {
            // Segments: a1, a2, f, g1, e, d1, d2
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_g1(left, center_x, middle)
            draw_segment_e(left, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
        }
        
        if char == "F" {
            // Segments: a1, a2, f, g1, e
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_g1(left, center_x, middle)
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "G" {
            // Segments: a1, a2, f, g2, b, c, d1, d2
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_g2(center_x, right, middle)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
        }
        
        if char == "H" {
            // Segments: f, j, g1, g2, b, c, e
            draw_segment_f(left, top, quarter_top)
            draw_segment_j(center_x, top, quarter_top)
            draw_segment_g1(left, center_x, middle)
            draw_segment_g2(center_x, right, middle)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "I" {
            // Segments: a1, a2, j, i, d1, d2
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_j(center_x, top, quarter_top)
            draw_segment_i(center_x, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
        }
        
        if char == "J" {
            // Segments: b, c, d1, e
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "K" {
            // Segments: f, g1, h, l, e
            draw_segment_f(left, top, quarter_top)
            draw_segment_g1(left, center_x, middle)
            draw_segment_h(center_x, right, quarter_top)  // diagonal
            draw_segment_l(center_x, right, quarter_bottom)  // diagonal
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "L" {
            // Segments: f, e, d1, d2
            draw_segment_f(left, top, quarter_top)
            draw_segment_e(left, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
        }
        
        if char == "M" {
            // Segments: f, h, k, b, c, e
            draw_segment_f(left, top, quarter_top)
            draw_segment_h(center_x, right, quarter_top)  // diagonal upper right
            draw_segment_k(left, center_x, quarter_top)   // diagonal upper left
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "N" {
            // Segments: f, k, m, b, c, e
            draw_segment_f(left, top, quarter_top)
            draw_segment_k(left, center_x, quarter_top)   // diagonal upper left
            draw_segment_m(center_x, right, quarter_bottom) // diagonal lower right
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "O" {
            // Segments: a1, a2, f, b, c, d1, d2, e
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_c(right, quarter_bottom, bottom)
            draw_segment_d1(left, center_x, bottom)
            draw_segment_d2(center_x, right, bottom)
            draw_segment_e(left, quarter_bottom, bottom)
        }
        
        if char == "P" {
            // Segments: a1, a2, f, g1, g2, b, j
            draw_segment_a1(left, right, center_x, top)
            draw_segment_a2(left, right, center_x, top)
            draw_segment_f(left, top, quarter_top)
            draw_segment_g1(left, center_x, middle)
            draw_segment_g2(center_x, right, middle)
            draw_segment_b(right, quarter_top, quarter_bottom)
            draw_segment_j(center_x, top, quarter_top)
        }
        
        if char == " " {
            // Space - no segments
            note {Space character - no segments}
        }
        
        // Move to next character position
        current_x = current_x + char_width + spacing
    }
    
    return 1
}

// Individual segment drawing functions for 14-segment display
function draw_segment_a1(left, right, center_x, y) {
    // Top horizontal left half
    G0 Z[safe_z] X[left] Y[y]
    G0 Z[0]
    G1 X[center_x] Y[y]
    G0 Z[safe_z]
}

function draw_segment_a2(left, right, center_x, y) {
    // Top horizontal right half
    G0 Z[safe_z] X[center_x] Y[y]
    G0 Z[0]
    G1 X[right] Y[y]
    G0 Z[safe_z]
}

function draw_segment_f(x, y_top, y_bottom) {
    // Left vertical upper
    G0 Z[safe_z] X[x] Y[y_top]
    G0 Z[0]
    G1 X[x] Y[y_bottom]
    G0 Z[safe_z]
}

function draw_segment_j(x, y_top, y_bottom) {
    // Center vertical upper
    G0 Z[safe_z] X[x] Y[y_top]
    G0 Z[0]
    G1 X[x] Y[y_bottom]
    G0 Z[safe_z]
}

function draw_segment_b(x, y_top, y_bottom) {
    // Right vertical upper
    G0 Z[safe_z] X[x] Y[y_top]
    G0 Z[0]
    G1 X[x] Y[y_bottom]
    G0 Z[safe_z]
}

function draw_segment_g1(left, center_x, y) {
    // Middle horizontal left half
    G0 Z[safe_z] X[left] Y[y]
    G0 Z[0]
    G1 X[center_x] Y[y]
    G0 Z[safe_z]
}

function draw_segment_g2(center_x, right, y) {
    // Middle horizontal right half
    G0 Z[safe_z] X[center_x] Y[y]
    G0 Z[0]
    G1 X[right] Y[y]
    G0 Z[safe_z]
}

function draw_segment_e(x, y_top, y_bottom) {
    // Left vertical lower
    G0 Z[safe_z] X[x] Y[y_top]
    G0 Z[0]
    G1 X[x] Y[y_bottom]
    G0 Z[safe_z]
}

function draw_segment_i(x, y_top, y_bottom) {
    // Center vertical lower
    G0 Z[safe_z] X[x] Y[y_top]
    G0 Z[0]
    G1 X[x] Y[y_bottom]
    G0 Z[safe_z]
}

function draw_segment_c(x, y_top, y_bottom) {
    // Right vertical lower
    G0 Z[safe_z] X[x] Y[y_top]
    G0 Z[0]
    G1 X[x] Y[y_bottom]
    G0 Z[safe_z]
}

function draw_segment_d1(left, center_x, y) {
    // Bottom horizontal left half
    G0 Z[safe_z] X[left] Y[y]
    G0 Z[0]
    G1 X[center_x] Y[y]
    G0 Z[safe_z]
}

function draw_segment_d2(center_x, right, y) {
    // Bottom horizontal right half
    G0 Z[safe_z] X[center_x] Y[y]
    G0 Z[0]
    G1 X[right] Y[y]
    G0 Z[safe_z]
}

function draw_segment_h(x1, x2, y1) {
    // Diagonal upper right
    G0 Z[safe_z] X[x1] Y[y1]
    G0 Z[0]
    G1 X[x2] Y[y1 + (x2-x1)*0.5]
    G0 Z[safe_z]
}

function draw_segment_k(x1, x2, y1) {
    // Diagonal upper left
    G0 Z[safe_z] X[x1] Y[y1 + (x2-x1)*0.5]
    G0 Z[0]
    G1 X[x2] Y[y1]
    G0 Z[safe_z]
}

function draw_segment_l(x1, x2, y1) {
    // Diagonal lower right
    G0 Z[safe_z] X[x1] Y[y1]
    G0 Z[0]
    G1 X[x2] Y[y1 - (x2-x1)*0.5]
    G0 Z[safe_z]
}

function draw_segment_m(x1, x2, y1) {
    // Diagonal lower left
    G0 Z[safe_z] X[x1] Y[y1]
    G0 Z[0]
    G1 X[x2] Y[y1 - (x2-x1)*0.5]
    G0 Z[safe_z]
}

// DEMONSTRATION
note {=== 14-Segment Display Demo ===}

// Test individual letters
print_text(0, 20, "ABCDEF", 8, 2)
print_text(0, 0, "GHIJKL", 8, 2)
print_text(0, -20, "MNOP", 8, 2)

// Test words
print_text(0, -50, "HELLO", 10, 3)
print_text(0, -80, "WORLD", 10, 3)

// Return to safe position
G0 Z[safe_z] X[0] Y[0]

note {=== 14-Segment Display Complete ===}
note {Full alphabet support with authentic segment patterns}
note {Each character uses proper 14-segment combinations}