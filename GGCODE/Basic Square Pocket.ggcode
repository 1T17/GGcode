
// // GGcode test file
let id = 2345

note {
  ╔═╗╔═╗┌─┐┌─┐┌┬┐┌─┐     File compiled : [ggcode_file_name]  
  ║ ╦║ ╦│  │ │ ││├┤      Timestamp : [time]  
  ╚═╝╚═╝└─┘└─┘─┴┘└─┘     Program ID: [id]  

 Basic Square Pocket - ontinuous Spiral Cut
}

G90 G94 G17
G20
G53 G0 Z0
T1 M6
S6000 M3
G54
M8

let pocket_width   = 200      // total width of pocket
let pocket_height  = 200      // total height of pocket
let step_over      = 1       // tool stepover per inward pass
let z_safe         = 5
let z_cut          = -1
let feed           = 300
let round_eps      = 0.0001

// === Rounding helpers ===
function r3(n) {
    return floor(n * 1000 + 0.5) / 1000
}
function rz(n) {
    if (abs(n) < round_eps) { return 0 }
    return r3(n)
}

// === Pocket Bounds (centered) ===
let min_x = -pocket_width  / 2
let max_x =  pocket_width  / 2
let min_y = -pocket_height / 2
let max_y =  pocket_height / 2

// === Move to start ===
G0 Z[z_safe]
G0 X[rz(min_x)] Y[rz(min_y)]
G1 Z[z_cut] F[feed]

// === Continuous Spiral Path ===
while ((max_x - min_x > step_over * 2) && (max_y - min_y > step_over * 2)) {

    G1 X[rz(max_x)] Y[rz(min_y)] F[feed]
    G1 X[rz(max_x)] Y[rz(max_y)] F[feed]
    G1 X[rz(min_x)] Y[rz(max_y)] F[feed]
    G1 X[rz(min_x)] Y[rz(min_y)] F[feed]

    min_x = min_x + step_over
    max_x = max_x - step_over
    min_y = min_y + step_over
    max_y = max_y - step_over
}

// === End ===
G0 Z[z_safe]
G0 X0 Y0












